import time
import argparse
from uuid import uuid4

from bluetooth.ble import BeaconService


def run_beacon(interface, uuid, major, minor, tx):
	service = BeaconService(interface)

	if not uuid:
		uuid = str(uuid4())
		print 'Autogenerated UUID:', uuid

	print 'Starting advertisement:'
	print ' ', uuid, '{}.{}'.format(major, minor), tx
	service.start_advertising(uuid, major, minor, tx, 200, 0x00e0, 0xbe, 0xac)
	try:
		while True:
			time.sleep(0.1)
	except KeyboardInterrupt:
		print 'shutting down'
	service.stop_advertising()


def main():
	parser = argparse.ArgumentParser(description='BLE Test Server')
	parser.add_argument('--interface', '-i', default='hci0',
						help='bluetooth interface name')
	parser.add_argument('--uuid', '-u', default=None,
						help='advertisement UUID')
	parser.add_argument('--major', '-M', default=1, type=int,
						help='major version')
	parser.add_argument('--minor', '-m', default=1, type=int,
						help='minor version')
	parser.add_argument('--tx', '-t', default=-68, type=int, help='tx power')
	args = parser.parse_args()

	run_beacon(args.interface, args.uuid, args.major, args.minor, args.tx)


if __name__ == '__main__':
	main()
